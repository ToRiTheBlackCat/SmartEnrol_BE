// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using Microsoft.Extensions.Configuration;

namespace SmartEnrol.Repositories.Models;

public partial class SmartEnrolContext : DbContext
{
    public SmartEnrolContext()
    {
    }

    public SmartEnrolContext(DbContextOptions<SmartEnrolContext> options)
        : base(options)
    {
    }

    public virtual DbSet<Account> Accounts { get; set; }

    public virtual DbSet<AdmissionMethodOfMajor> AdmissionMethodOfMajors { get; set; }

    public virtual DbSet<AdmissionMethodOfUni> AdmissionMethodOfUnis { get; set; }

    public virtual DbSet<Characteristic> Characteristics { get; set; }

    public virtual DbSet<CharacteristicOfField> CharacteristicOfFields { get; set; }

    public virtual DbSet<CharacteristicOfStudent> CharacteristicOfStudents { get; set; }

    public virtual DbSet<Field> Fields { get; set; }

    public virtual DbSet<FieldOfUni> FieldOfUnis { get; set; }

    public virtual DbSet<Major> Majors { get; set; }

    public virtual DbSet<Recommendation> Recommendations { get; set; }

    public virtual DbSet<Role> Roles { get; set; }

    public virtual DbSet<University> Universities { get; set; }

    public virtual DbSet<WishListItem> WishListItems { get; set; }
    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
        modelBuilder.Entity<Account>(entity =>
        {
            entity.HasKey(e => e.AccountId).HasName("PK__Students__32C52B9905656C98");

            entity.ToTable("Account");

            entity.Property(e => e.AccountName).HasMaxLength(255);
            entity.Property(e => e.CreatedDate)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");
            entity.Property(e => e.Email)
                .IsRequired()
                .HasMaxLength(255);
            entity.Property(e => e.IsActive).HasDefaultValue(true);
            entity.Property(e => e.Password)
                .IsRequired()
                .HasMaxLength(255);

            entity.HasOne(d => d.Role).WithMany(p => p.Accounts)
                .HasForeignKey(d => d.RoleId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Account_Role");
        });

        modelBuilder.Entity<AdmissionMethodOfMajor>(entity =>
        {
            entity.HasKey(e => e.AdmissionMethodsOfMajorId).HasName("PK__Admissio__5B13486D7CD69950");

            entity.ToTable("AdmissionMethodOfMajor");

            entity.Property(e => e.AdmissionMethodId).HasColumnName("AdmissionMethodID");

            entity.HasOne(d => d.AdmissionMethod).WithMany(p => p.AdmissionMethodOfMajors)
                .HasForeignKey(d => d.AdmissionMethodId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__Admission__Admis__4BAC3F29");

            entity.HasOne(d => d.Major).WithMany(p => p.AdmissionMethodOfMajors)
                .HasForeignKey(d => d.MajorId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__Admission__Major__4AB81AF0");
        });

        modelBuilder.Entity<AdmissionMethodOfUni>(entity =>
        {
            entity.HasKey(e => e.AdmissionMethodId).HasName("PK__Admissio__8B797C8B821F30F1");

            entity.ToTable("AdmissionMethodOfUni");

            entity.Property(e => e.AdmissionMethodId).HasColumnName("AdmissionMethodID");
            entity.Property(e => e.MethodName)
                .IsRequired()
                .HasMaxLength(255);

            entity.HasOne(d => d.Uni).WithMany(p => p.AdmissionMethodOfUnis)
                .HasForeignKey(d => d.UniId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__Admission__UniId__47DBAE45");
        });

        modelBuilder.Entity<Characteristic>(entity =>
        {
            entity.HasKey(e => e.CharacteristicId).HasName("PK__Characte__C0EA4DCFB7B76666");

            entity.ToTable("Characteristic");

            entity.Property(e => e.CharacteristicName)
                .IsRequired()
                .HasMaxLength(255);
        });

        modelBuilder.Entity<CharacteristicOfField>(entity =>
        {
            entity.HasKey(e => e.CharacteristicsOfFieldId).HasName("PK__Characte__09E4561146D264D7");

            entity.ToTable("CharacteristicOfField");

            entity.Property(e => e.CharacteristicId).HasColumnName("CharacteristicID");
            entity.Property(e => e.FieldId).HasColumnName("FieldID");

            entity.HasOne(d => d.Characteristic).WithMany(p => p.CharacteristicOfFields)
                .HasForeignKey(d => d.CharacteristicId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__Character__Chara__4F7CD00D");

            entity.HasOne(d => d.Field).WithMany(p => p.CharacteristicOfFields)
                .HasForeignKey(d => d.FieldId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__Character__Field__4E88ABD4");
        });

        modelBuilder.Entity<CharacteristicOfStudent>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__Characte__3214EC07BAA554AB");

            entity.ToTable("CharacteristicOfStudent");

            entity.Property(e => e.CharacteristicId).HasColumnName("CharacteristicID");

            entity.HasOne(d => d.Account).WithMany(p => p.CharacteristicOfStudents)
                .HasForeignKey(d => d.AccountId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__Character__Stude__5BE2A6F2");

            entity.HasOne(d => d.Characteristic).WithMany(p => p.CharacteristicOfStudents)
                .HasForeignKey(d => d.CharacteristicId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__Character__Chara__5AEE82B9");
        });

        modelBuilder.Entity<Field>(entity =>
        {
            entity.HasKey(e => e.FieldId).HasName("PK__Fields__C8B6FF07670422EA");

            entity.ToTable("Field");

            entity.Property(e => e.FieldName)
                .IsRequired()
                .HasMaxLength(255);
        });

        modelBuilder.Entity<FieldOfUni>(entity =>
        {
            entity.HasKey(e => e.FieldsOfUniId).HasName("PK__FieldsOf__CB695E283974CF64");

            entity.ToTable("FieldOfUni");

            entity.HasOne(d => d.Field).WithMany(p => p.FieldOfUnis)
                .HasForeignKey(d => d.FieldId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__FieldsOfU__Field__4222D4EF");

            entity.HasOne(d => d.University).WithMany(p => p.FieldOfUnis)
                .HasForeignKey(d => d.UniversityId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__FieldsOfU__Unive__412EB0B6");
        });

        modelBuilder.Entity<Major>(entity =>
        {
            entity.HasKey(e => e.MajorId).HasName("PK__Majors__D5B8BF9140D30E55");

            entity.ToTable("Major");

            entity.Property(e => e.FieldOfUniId).HasColumnName("FieldOfUniID");
            entity.Property(e => e.Name)
                .IsRequired()
                .HasMaxLength(255);

            entity.HasOne(d => d.FieldOfUni).WithMany(p => p.Majors)
                .HasForeignKey(d => d.FieldOfUniId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__Majors__FieldOfU__44FF419A");
        });

        modelBuilder.Entity<Recommendation>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__Recommen__3214EC0765872E47");

            entity.ToTable("Recommendation");

            entity.Property(e => e.CreatedDate)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");
            entity.Property(e => e.MajorId).HasColumnName("MajorID");
            entity.Property(e => e.Recommendation1).HasColumnName("Recommendation");

            entity.HasOne(d => d.Account).WithMany(p => p.Recommendations)
                .HasForeignKey(d => d.AccountId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__Recommend__Stude__534D60F1");

            entity.HasOne(d => d.Major).WithMany(p => p.Recommendations)
                .HasForeignKey(d => d.MajorId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__Recommend__Major__5441852A");
        });

        modelBuilder.Entity<Role>(entity =>
        {
            entity.ToTable("Role");

            entity.Property(e => e.RoleName)
                .IsRequired()
                .HasMaxLength(25)
                .IsFixedLength();
        });

        modelBuilder.Entity<University>(entity =>
        {
            entity.HasKey(e => e.UniversityId).HasName("PK__Universi__9F19E1BC0C5AAF4C");

            entity.ToTable("University");

            entity.Property(e => e.Code)
                .IsRequired()
                .HasMaxLength(50);
            entity.Property(e => e.Email).HasMaxLength(255);
            entity.Property(e => e.Location).HasMaxLength(255);
            entity.Property(e => e.Phone).HasMaxLength(50);
            entity.Property(e => e.UniversityName)
                .IsRequired()
                .HasMaxLength(255);
            entity.Property(e => e.Website).HasMaxLength(255);
        });

        modelBuilder.Entity<WishListItem>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__WishList__3214EC071B15C00A");

            entity.ToTable("WishListItem");

            entity.Property(e => e.MajorId).HasColumnName("MajorID");

            entity.HasOne(d => d.Account).WithMany(p => p.WishListItems)
                .HasForeignKey(d => d.AccountId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__WishListI__Stude__571DF1D5");

            entity.HasOne(d => d.Major).WithMany(p => p.WishListItems)
                .HasForeignKey(d => d.MajorId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__WishListI__Major__5812160E");
        });

        OnModelCreatingPartial(modelBuilder);
    }

    partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
}